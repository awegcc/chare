{
  "_args": [
    [
      {
        "raw": "lru-files",
        "scope": null,
        "escapedName": "lru-files",
        "name": "lru-files",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/sgcc/share/blockCache"
    ]
  ],
  "_cnpm_publish_time": 1460668456582,
  "_from": "lru-files",
  "_hasShrinkwrap": false,
  "_id": "lru-files@0.0.7",
  "_location": "/lru-files",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/lru-files-0.0.7.tgz_1460668454092_0.16660990566015244"
  },
  "_npmUser": {
    "name": "yetzt",
    "email": "node@yetzt.me"
  },
  "_npmVersion": "2.14.20",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lru-files",
    "scope": null,
    "escapedName": "lru-files",
    "name": "lru-files",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "http://registry.npm.taobao.org/lru-files/download/lru-files-0.0.7.tgz",
  "_shasum": "d699495c59d5f59c9aee90ee0f7534d5f3bb5f4b",
  "_shrinkwrap": null,
  "_spec": "lru-files",
  "_where": "/Users/sgcc/share/blockCache",
  "author": {
    "name": "yetzt",
    "email": "node@yetzt.me"
  },
  "bugs": {
    "url": "https://github.com/yetzt/node-lru-files/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "dur": "^0.0.2",
    "mkdirp": "^0.5.1",
    "queue": "^3.1.0",
    "rimraf": "^2.5.2"
  },
  "description": "A filesystem cache of least recently used files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d699495c59d5f59c9aee90ee0f7534d5f3bb5f4b",
    "size": 5784,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/lru-files/download/lru-files-0.0.7.tgz"
  },
  "gitHead": "0b1d3683a2698a18d069da04839d429a244f3eac",
  "homepage": "https://github.com/yetzt/node-lru-files#readme",
  "keywords": [
    "lru",
    "cache",
    "file",
    "filecache",
    "filesystem"
  ],
  "license": "Unlicense",
  "main": "./filecache.js",
  "maintainers": [
    {
      "name": "yetzt",
      "email": "yeetzt@googlemail.com"
    }
  ],
  "name": "lru-files",
  "optionalDependencies": {},
  "publish_time": 1460668456582,
  "readme": "# lru files\n\nA file cache inspired by [lru-cache](https://github.com/isaacs/node-lru-cache).\nLeast recently used files are deleted. It's helpful if your filesystem uses `atime`.\nEverything is written to files and nothing is kept in-memory.\n\n## Install\n\n````\nnpm install lru-files\n````\n\n## Usgae\n\n```` javascript\n\nvar lrufiles = require(\"lru-files\");\n\nvar cache = new lrufiles({\n\tfiles: 100,       // maximum number of files\n\tsize: \"1 GB\",     // maximum total file size\n\tage: \"1 Day\",     // maximum last file access\n\tcheck: \"1 Hour\",  // interval of checks\n\tpersist: \"1 Hour\" // keep access statistics in a file, save in regular intervals\n});\n\n// add a file to cache. you can submit a buffer...\ncache.add(\"filename.ext\", new Buffer(\"data\"), function(err){});\n\n// ... readable stream ...\ncache.add(\"otherfile.ext\", fs.createReadableStream(\"/some/filename.ext\"), function(err){});\n\n// ... or object\ncache.add(\"objectfile.json\", {hello: \"world\"}, function(err){});\n\n// get a file from cache\ncache.get(\"somefile.ext\", function(err, buffer){\n\t// calls back with a buffer\n});\n\n// get a readable stream to a cached file, straight...\ncache.stream(\"anyfile.ext\").pipe(somewhere);\n\n// ... or via callbacl\ncache.stream(\"anyfile.ext\" function(err, stream){\n\tstream.pipe(somewhere);\n});\n\n// check if a file is cached\ncache.check(\"filename.ext\", function(exists){\n\t// whatever\n});\n\n// update a files access time\ncache.touch(\"file/changed.txt\", function(err){ });\n\n// remove a file from cache\ncache.remove(\"file/changed.txt\", function(err){ });\n\n// manually remove old files\ncache.clean(function(err){});\n\n// empty everything\ncache.purge(function(err){});\n\n````\n\n## License\n\n[Public Domain](http://unlicense.org/UNLICENSE).\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yetzt/node-lru-files.git"
  },
  "scripts": {},
  "version": "0.0.7"
}
